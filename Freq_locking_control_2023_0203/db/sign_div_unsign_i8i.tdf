--sign_div_unsign DEN_REPRESENTATION="UNSIGNED" DEN_WIDTH=12 LPM_PIPELINE=1 MAXIMIZE_SPEED=5 NUM_REPRESENTATION="UNSIGNED" NUM_WIDTH=12 SKIP_BITS=0 clock denominator numerator quotient remainder
--VERSION_BEGIN 19.1 cbx_cycloneii 2019:09:22:11:00:28:SJ cbx_lpm_abs 2019:09:22:11:00:28:SJ cbx_lpm_add_sub 2019:09:22:11:00:28:SJ cbx_lpm_divide 2019:09:22:11:00:28:SJ cbx_mgl 2019:09:22:11:02:15:SJ cbx_nadder 2019:09:22:11:00:28:SJ cbx_stratix 2019:09:22:11:00:28:SJ cbx_stratixii 2019:09:22:11:00:28:SJ cbx_util_mgl 2019:09:22:11:00:28:SJ  VERSION_END


-- Copyright (C) 2019  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION alt_u_div_brf (clock, denominator[11..0], numerator[11..0])
RETURNS ( quotient[11..0], remainder[11..0]);

--synthesis_resources = lut 85 reg 48 
SUBDESIGN sign_div_unsign_i8i
( 
	clock	:	input;
	denominator[11..0]	:	input;
	numerator[11..0]	:	input;
	quotient[11..0]	:	output;
	remainder[11..0]	:	output;
) 
VARIABLE 
	divider : alt_u_div_brf;
	norm_num[11..0]	: WIRE;
	protect_quotient[11..0]	: WIRE;
	protect_remainder[11..0]	: WIRE;

BEGIN 
	divider.clock = clock;
	divider.denominator[] = denominator[];
	divider.numerator[] = norm_num[];
	norm_num[] = numerator[];
	protect_quotient[] = divider.quotient[];
	protect_remainder[] = divider.remainder[];
	quotient[] = protect_quotient[];
	remainder[] = protect_remainder[];
END;
--VALID FILE
