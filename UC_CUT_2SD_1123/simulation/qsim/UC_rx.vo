// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "09/29/2022 16:37:05"

// 
// Device: Altera 5M240ZM68I5 Package MBGA68
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module UC_rx (
	clk,
	out,
	set,
	fre_count);
input 	clk;
output 	[4:0] out;
input 	set;
output 	[4:0] fre_count;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \fre_count[0]~reg0_regout ;
wire \fre_count[0]~1 ;
wire \fre_count[0]~1COUT1_11 ;
wire \fre_count[1]~reg0_regout ;
wire \fre_count[1]~3 ;
wire \fre_count[1]~3COUT1_12 ;
wire \fre_count[2]~reg0_regout ;
wire \fre_count[2]~5 ;
wire \fre_count[2]~5COUT1_13 ;
wire \fre_count[3]~7 ;
wire \fre_count[3]~7COUT1_14 ;
wire \fre_count[4]~reg0_regout ;
wire \LessThan0~0_combout ;
wire \LessThan0~1_combout ;
wire \fre_count[3]~reg0_regout ;
wire \out[0]~reg0_regout ;
wire \WideOr3~0_combout ;
wire \out[1]~reg0_regout ;
wire \WideOr2~1_combout ;
wire \WideOr2~0_combout ;
wire \out[2]~reg0_regout ;
wire \WideOr1~0_combout ;
wire \out[3]~reg0_regout ;
wire \WideOr0~0_combout ;
wire \out[4]~reg0_regout ;


// Location: PIN_J3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y4_N5
maxv_lcell \fre_count[0]~reg0 (
// Equation(s):
// \fre_count[0]~reg0_regout  = DFFEAS((!\fre_count[0]~reg0_regout ), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~1_combout , )
// \fre_count[0]~1  = CARRY((\fre_count[0]~reg0_regout ))
// \fre_count[0]~1COUT1_11  = CARRY((\fre_count[0]~reg0_regout ))

	.clk(\clk~combout ),
	.dataa(\fre_count[0]~reg0_regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fre_count[0]~reg0_regout ),
	.cout(),
	.cout0(\fre_count[0]~1 ),
	.cout1(\fre_count[0]~1COUT1_11 ));
// synopsys translate_off
defparam \fre_count[0]~reg0 .lut_mask = "55aa";
defparam \fre_count[0]~reg0 .operation_mode = "arithmetic";
defparam \fre_count[0]~reg0 .output_mode = "reg_only";
defparam \fre_count[0]~reg0 .register_cascade_mode = "off";
defparam \fre_count[0]~reg0 .sum_lutc_input = "datac";
defparam \fre_count[0]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y4_N6
maxv_lcell \fre_count[1]~reg0 (
// Equation(s):
// \fre_count[1]~reg0_regout  = DFFEAS(\fre_count[1]~reg0_regout  $ ((((\fre_count[0]~1 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~1_combout , )
// \fre_count[1]~3  = CARRY(((!\fre_count[0]~1 )) # (!\fre_count[1]~reg0_regout ))
// \fre_count[1]~3COUT1_12  = CARRY(((!\fre_count[0]~1COUT1_11 )) # (!\fre_count[1]~reg0_regout ))

	.clk(\clk~combout ),
	.dataa(\fre_count[1]~reg0_regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\fre_count[0]~1 ),
	.cin1(\fre_count[0]~1COUT1_11 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fre_count[1]~reg0_regout ),
	.cout(),
	.cout0(\fre_count[1]~3 ),
	.cout1(\fre_count[1]~3COUT1_12 ));
// synopsys translate_off
defparam \fre_count[1]~reg0 .cin0_used = "true";
defparam \fre_count[1]~reg0 .cin1_used = "true";
defparam \fre_count[1]~reg0 .lut_mask = "5a5f";
defparam \fre_count[1]~reg0 .operation_mode = "arithmetic";
defparam \fre_count[1]~reg0 .output_mode = "reg_only";
defparam \fre_count[1]~reg0 .register_cascade_mode = "off";
defparam \fre_count[1]~reg0 .sum_lutc_input = "cin";
defparam \fre_count[1]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y4_N7
maxv_lcell \fre_count[2]~reg0 (
// Equation(s):
// \fre_count[2]~reg0_regout  = DFFEAS((\fre_count[2]~reg0_regout  $ ((!\fre_count[1]~3 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~1_combout , )
// \fre_count[2]~5  = CARRY(((\fre_count[2]~reg0_regout  & !\fre_count[1]~3 )))
// \fre_count[2]~5COUT1_13  = CARRY(((\fre_count[2]~reg0_regout  & !\fre_count[1]~3COUT1_12 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\fre_count[2]~reg0_regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\fre_count[1]~3 ),
	.cin1(\fre_count[1]~3COUT1_12 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fre_count[2]~reg0_regout ),
	.cout(),
	.cout0(\fre_count[2]~5 ),
	.cout1(\fre_count[2]~5COUT1_13 ));
// synopsys translate_off
defparam \fre_count[2]~reg0 .cin0_used = "true";
defparam \fre_count[2]~reg0 .cin1_used = "true";
defparam \fre_count[2]~reg0 .lut_mask = "c30c";
defparam \fre_count[2]~reg0 .operation_mode = "arithmetic";
defparam \fre_count[2]~reg0 .output_mode = "reg_only";
defparam \fre_count[2]~reg0 .register_cascade_mode = "off";
defparam \fre_count[2]~reg0 .sum_lutc_input = "cin";
defparam \fre_count[2]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y4_N8
maxv_lcell \fre_count[3]~reg0 (
// Equation(s):
// \fre_count[3]~reg0_regout  = DFFEAS(\fre_count[3]~reg0_regout  $ ((((\fre_count[2]~5 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~1_combout , )
// \fre_count[3]~7  = CARRY(((!\fre_count[2]~5 )) # (!\fre_count[3]~reg0_regout ))
// \fre_count[3]~7COUT1_14  = CARRY(((!\fre_count[2]~5COUT1_13 )) # (!\fre_count[3]~reg0_regout ))

	.clk(\clk~combout ),
	.dataa(\fre_count[3]~reg0_regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\fre_count[2]~5 ),
	.cin1(\fre_count[2]~5COUT1_13 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fre_count[3]~reg0_regout ),
	.cout(),
	.cout0(\fre_count[3]~7 ),
	.cout1(\fre_count[3]~7COUT1_14 ));
// synopsys translate_off
defparam \fre_count[3]~reg0 .cin0_used = "true";
defparam \fre_count[3]~reg0 .cin1_used = "true";
defparam \fre_count[3]~reg0 .lut_mask = "5a5f";
defparam \fre_count[3]~reg0 .operation_mode = "arithmetic";
defparam \fre_count[3]~reg0 .output_mode = "reg_only";
defparam \fre_count[3]~reg0 .register_cascade_mode = "off";
defparam \fre_count[3]~reg0 .sum_lutc_input = "cin";
defparam \fre_count[3]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y4_N9
maxv_lcell \fre_count[4]~reg0 (
// Equation(s):
// \fre_count[4]~reg0_regout  = DFFEAS(((\fre_count[3]~7  $ (!\fre_count[4]~reg0_regout ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~1_combout , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\fre_count[4]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\fre_count[3]~7 ),
	.cin1(\fre_count[3]~7COUT1_14 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fre_count[4]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fre_count[4]~reg0 .cin0_used = "true";
defparam \fre_count[4]~reg0 .cin1_used = "true";
defparam \fre_count[4]~reg0 .lut_mask = "f00f";
defparam \fre_count[4]~reg0 .operation_mode = "normal";
defparam \fre_count[4]~reg0 .output_mode = "reg_only";
defparam \fre_count[4]~reg0 .register_cascade_mode = "off";
defparam \fre_count[4]~reg0 .sum_lutc_input = "cin";
defparam \fre_count[4]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y4_N3
maxv_lcell \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (((\fre_count[0]~reg0_regout ) # (\fre_count[1]~reg0_regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\fre_count[0]~reg0_regout ),
	.datad(\fre_count[1]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = "fff0";
defparam \LessThan0~0 .operation_mode = "normal";
defparam \LessThan0~0 .output_mode = "comb_only";
defparam \LessThan0~0 .register_cascade_mode = "off";
defparam \LessThan0~0 .sum_lutc_input = "datac";
defparam \LessThan0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N4
maxv_lcell \LessThan0~1 (
// Equation(s):
// \LessThan0~1_combout  = (\fre_count[4]~reg0_regout  & ((\fre_count[3]~reg0_regout ) # ((\fre_count[2]~reg0_regout  & \LessThan0~0_combout ))))

	.clk(gnd),
	.dataa(\fre_count[3]~reg0_regout ),
	.datab(\fre_count[4]~reg0_regout ),
	.datac(\fre_count[2]~reg0_regout ),
	.datad(\LessThan0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~1 .lut_mask = "c888";
defparam \LessThan0~1 .operation_mode = "normal";
defparam \LessThan0~1 .output_mode = "comb_only";
defparam \LessThan0~1 .register_cascade_mode = "off";
defparam \LessThan0~1 .sum_lutc_input = "datac";
defparam \LessThan0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N2
maxv_lcell \out[0]~reg0 (
// Equation(s):
// \out[0]~reg0_regout  = DFFEAS(((\fre_count[4]~reg0_regout  & ((\fre_count[3]~reg0_regout ) # (\fre_count[2]~reg0_regout )))) # (!\fre_count[0]~reg0_regout ), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\fre_count[3]~reg0_regout ),
	.datab(\fre_count[2]~reg0_regout ),
	.datac(\fre_count[0]~reg0_regout ),
	.datad(\fre_count[4]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[0]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \out[0]~reg0 .lut_mask = "ef0f";
defparam \out[0]~reg0 .operation_mode = "normal";
defparam \out[0]~reg0 .output_mode = "reg_only";
defparam \out[0]~reg0 .register_cascade_mode = "off";
defparam \out[0]~reg0 .sum_lutc_input = "datac";
defparam \out[0]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N0
maxv_lcell \WideOr3~0 (
// Equation(s):
// \WideOr3~0_combout  = (!\fre_count[2]~reg0_regout  & (!\fre_count[3]~reg0_regout  & (\fre_count[1]~reg0_regout  $ (\fre_count[0]~reg0_regout ))))

	.clk(gnd),
	.dataa(\fre_count[1]~reg0_regout ),
	.datab(\fre_count[2]~reg0_regout ),
	.datac(\fre_count[0]~reg0_regout ),
	.datad(\fre_count[3]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WideOr3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WideOr3~0 .lut_mask = "0012";
defparam \WideOr3~0 .operation_mode = "normal";
defparam \WideOr3~0 .output_mode = "comb_only";
defparam \WideOr3~0 .register_cascade_mode = "off";
defparam \WideOr3~0 .sum_lutc_input = "datac";
defparam \WideOr3~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N1
maxv_lcell \out[1]~reg0 (
// Equation(s):
// \out[1]~reg0_regout  = DFFEAS((\fre_count[4]~reg0_regout  & (((\WideOr3~0_combout )))) # (!\fre_count[4]~reg0_regout  & (\fre_count[0]~reg0_regout  $ ((\fre_count[1]~reg0_regout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\fre_count[0]~reg0_regout ),
	.datab(\fre_count[4]~reg0_regout ),
	.datac(\fre_count[1]~reg0_regout ),
	.datad(\WideOr3~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[1]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \out[1]~reg0 .lut_mask = "de12";
defparam \out[1]~reg0 .operation_mode = "normal";
defparam \out[1]~reg0 .output_mode = "reg_only";
defparam \out[1]~reg0 .register_cascade_mode = "off";
defparam \out[1]~reg0 .sum_lutc_input = "datac";
defparam \out[1]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N4
maxv_lcell \WideOr2~1 (
// Equation(s):
// \WideOr2~1_combout  = (((\fre_count[1]~reg0_regout  & \fre_count[0]~reg0_regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\fre_count[1]~reg0_regout ),
	.datad(\fre_count[0]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WideOr2~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WideOr2~1 .lut_mask = "f000";
defparam \WideOr2~1 .operation_mode = "normal";
defparam \WideOr2~1 .output_mode = "comb_only";
defparam \WideOr2~1 .register_cascade_mode = "off";
defparam \WideOr2~1 .sum_lutc_input = "datac";
defparam \WideOr2~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N9
maxv_lcell \WideOr2~0 (
// Equation(s):
// \WideOr2~0_combout  = (!\fre_count[3]~reg0_regout  & ((\fre_count[0]~reg0_regout  & (\fre_count[1]~reg0_regout  & !\fre_count[2]~reg0_regout )) # (!\fre_count[0]~reg0_regout  & (!\fre_count[1]~reg0_regout  & \fre_count[2]~reg0_regout ))))

	.clk(gnd),
	.dataa(\fre_count[0]~reg0_regout ),
	.datab(\fre_count[1]~reg0_regout ),
	.datac(\fre_count[3]~reg0_regout ),
	.datad(\fre_count[2]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WideOr2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WideOr2~0 .lut_mask = "0108";
defparam \WideOr2~0 .operation_mode = "normal";
defparam \WideOr2~0 .output_mode = "comb_only";
defparam \WideOr2~0 .register_cascade_mode = "off";
defparam \WideOr2~0 .sum_lutc_input = "datac";
defparam \WideOr2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N2
maxv_lcell \out[2]~reg0 (
// Equation(s):
// \out[2]~reg0_regout  = DFFEAS((\fre_count[4]~reg0_regout  & (((\WideOr2~0_combout )))) # (!\fre_count[4]~reg0_regout  & (\fre_count[2]~reg0_regout  $ ((\WideOr2~1_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\fre_count[4]~reg0_regout ),
	.datab(\fre_count[2]~reg0_regout ),
	.datac(\WideOr2~1_combout ),
	.datad(\WideOr2~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[2]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \out[2]~reg0 .lut_mask = "be14";
defparam \out[2]~reg0 .operation_mode = "normal";
defparam \out[2]~reg0 .output_mode = "reg_only";
defparam \out[2]~reg0 .register_cascade_mode = "off";
defparam \out[2]~reg0 .sum_lutc_input = "datac";
defparam \out[2]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N0
maxv_lcell \WideOr1~0 (
// Equation(s):
// \WideOr1~0_combout  = \fre_count[3]~reg0_regout  $ (((\fre_count[0]~reg0_regout  & (\fre_count[1]~reg0_regout  & \fre_count[2]~reg0_regout ))))

	.clk(gnd),
	.dataa(\fre_count[0]~reg0_regout ),
	.datab(\fre_count[1]~reg0_regout ),
	.datac(\fre_count[3]~reg0_regout ),
	.datad(\fre_count[2]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WideOr1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WideOr1~0 .lut_mask = "78f0";
defparam \WideOr1~0 .operation_mode = "normal";
defparam \WideOr1~0 .output_mode = "comb_only";
defparam \WideOr1~0 .register_cascade_mode = "off";
defparam \WideOr1~0 .sum_lutc_input = "datac";
defparam \WideOr1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N1
maxv_lcell \out[3]~reg0 (
// Equation(s):
// \out[3]~reg0_regout  = DFFEAS((((!\fre_count[4]~reg0_regout  & \WideOr1~0_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\fre_count[4]~reg0_regout ),
	.datad(\WideOr1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[3]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \out[3]~reg0 .lut_mask = "0f00";
defparam \out[3]~reg0 .operation_mode = "normal";
defparam \out[3]~reg0 .output_mode = "reg_only";
defparam \out[3]~reg0 .register_cascade_mode = "off";
defparam \out[3]~reg0 .sum_lutc_input = "datac";
defparam \out[3]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N7
maxv_lcell \WideOr0~0 (
// Equation(s):
// \WideOr0~0_combout  = (\fre_count[2]~reg0_regout  & ((\fre_count[0]~reg0_regout ) # ((\fre_count[1]~reg0_regout ) # (!\fre_count[4]~reg0_regout ))))

	.clk(gnd),
	.dataa(\fre_count[0]~reg0_regout ),
	.datab(\fre_count[2]~reg0_regout ),
	.datac(\fre_count[1]~reg0_regout ),
	.datad(\fre_count[4]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WideOr0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WideOr0~0 .lut_mask = "c8cc";
defparam \WideOr0~0 .operation_mode = "normal";
defparam \WideOr0~0 .output_mode = "comb_only";
defparam \WideOr0~0 .register_cascade_mode = "off";
defparam \WideOr0~0 .sum_lutc_input = "datac";
defparam \WideOr0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N5
maxv_lcell \out[4]~reg0 (
// Equation(s):
// \out[4]~reg0_regout  = DFFEAS((\fre_count[3]~reg0_regout  & (!\fre_count[4]~reg0_regout  & (\WideOr0~0_combout  & \WideOr2~1_combout ))) # (!\fre_count[3]~reg0_regout  & (\fre_count[4]~reg0_regout  & (!\WideOr0~0_combout ))), GLOBAL(\clk~combout ), VCC, , 
// , , , , )

	.clk(\clk~combout ),
	.dataa(\fre_count[3]~reg0_regout ),
	.datab(\fre_count[4]~reg0_regout ),
	.datac(\WideOr0~0_combout ),
	.datad(\WideOr2~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[4]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \out[4]~reg0 .lut_mask = "2404";
defparam \out[4]~reg0 .operation_mode = "normal";
defparam \out[4]~reg0 .output_mode = "reg_only";
defparam \out[4]~reg0 .register_cascade_mode = "off";
defparam \out[4]~reg0 .sum_lutc_input = "datac";
defparam \out[4]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_A1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \out[0]~I (
	.datain(\out[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(out[0]));
// synopsys translate_off
defparam \out[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_A2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \out[1]~I (
	.datain(\out[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(out[1]));
// synopsys translate_off
defparam \out[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_A3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \out[2]~I (
	.datain(\out[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(out[2]));
// synopsys translate_off
defparam \out[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_A4,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \out[3]~I (
	.datain(\out[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(out[3]));
// synopsys translate_off
defparam \out[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_J2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \out[4]~I (
	.datain(\out[4]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(out[4]));
// synopsys translate_off
defparam \out[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_F9,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \set~I (
	.datain(gnd),
	.oe(gnd),
	.combout(),
	.padio(set));
// synopsys translate_off
defparam \set~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_B1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \fre_count[0]~I (
	.datain(\fre_count[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(fre_count[0]));
// synopsys translate_off
defparam \fre_count[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_A5,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \fre_count[1]~I (
	.datain(\fre_count[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(fre_count[1]));
// synopsys translate_off
defparam \fre_count[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_B3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \fre_count[2]~I (
	.datain(\fre_count[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(fre_count[2]));
// synopsys translate_off
defparam \fre_count[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_B4,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \fre_count[3]~I (
	.datain(\fre_count[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(fre_count[3]));
// synopsys translate_off
defparam \fre_count[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_C1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \fre_count[4]~I (
	.datain(\fre_count[4]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(fre_count[4]));
// synopsys translate_off
defparam \fre_count[4]~I .operation_mode = "output";
// synopsys translate_on

endmodule
